'From Squeak4.4 of 31 December 2012 [latest update: #12327] on 18 November 2013 at 11:25:07 pm'!Object subclass: #NQueensGame	instanceVariableNames: 'n solution solutions'	classVariableNames: ''	poolDictionaries: ''	category: 'Games'!!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 10:03'!getSolutions	^ solutions! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 23:05'!printSolution: solution	| board row |	board := Board new: n.	1 to: n do: [ :col |		row := solution at: col.		(board at: row) at: col put: 'Q'		].! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 10:14'!run: showSolutions	self solve: 1 showSolution: showSolutions.! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 09:46'!safe: solution rowA: rowA colA: colA	| rowB |	1 to: (colA - 1) do: [ :colB |		rowB := solution at: colB.		(((rowB - rowA) abs = (colB - colA) abs) or: (rowB = rowA)) ifTrue: [^false]		].	^true! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 10:09'!setSize: size	n := size.	solution := (1 to: size) collect: [ :i | -1]. "solution := #(-1 -1 -1 -1 -1 ...) n times"	solutions := 0.! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 23:08'!solutionToBoard: solution	| board row |	board := Board new: n.	1 to: n do: [ :col |		row := solution at: col.		(board at: row) at: col put: 'Q'		].	^board! !!NQueensGame methodsFor: 'as yet unclassified' stamp: 'cfoch 11/18/2013 23:24'!solve: col showSolution: showSolution	(col > n) ifTrue: [		| board |		solutions := solutions + 1.		board := self solutionToBoard: solution.		showSolution ifTrue: [			Transcript show: 'SOLUTION: ', solutions; cr.			board printBoard.			].		^false		].	1 to: n do: [ :row |		(self safe: solution rowA: row colA: col) ifTrue: [			solution at: col put: row.			(self solve: (col + 1) showSolution: showSolution) ifTrue: [^true].			solution at: col put: -1			]		].	^false! !